Анализ производился утилитами jstat и jconsole. При этом трекер запускался в трёх режимах:
- размер heap по умолчанию (максимум 962 Мб).
- heap ограничен до 10 Мб
- минимальный heap равный 7 Мб, при котором со временем появлялось исключение OutOfMemoryError.
Были получены следующие результаты:
1) Сразу после запуска программы видно было последовательное наполнение Eden. При неограниченном heap Eden наполнялся до 75-80%, при этом Old Generation оставался заполненным на 6%. После того, как общий размер heap достигал 40 Мб производилась очистка мусора.
2) В случае с ограниченным heap до 10 Мб очистка производилась гораздо чаще. Сразу после запуска Eden наполнялся до 50%, а потом он очищался и Old Generation практически всегда был наполнен до 70 - 75%.
3) В обоих вышеперечисленных случаях раздел Survive S1 всё время работы был загружен до 100%, при очистке мусора очищаясь полностью.
4) При очень малом размере heap возникала ошибка OutOfMemoryError. При этом в jconsole разрывалась связь с процессом. Из jstat было видно, что Eden и Survivor были пустыми, а Old Generation заполнен на 92-95%.

Таким образом наглядно видно, что при большом объёме heap очистка мусора производится реже, при этом Old Generation наполняется последним, а объекты из Eden в основном попадают в Survivor. При ограниченном объёме кучи очистка мусора производится чаще, и Old Generation более загружен. В случае, когда Old Generation критически наполняется (более чем на 90%) возникает ошибка OutOfMemoryError и программа не может выполняться.